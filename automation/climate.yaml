##########################################################
## Climate
##########################################################

# Set Temperature to Day Temp
- alias: Climate - Set Temperature to Day Temperature
  id: "climate_set_to_day_temp"

  initial_state: true
  trigger:
    - platform: time
      at: input_datetime.climate_day_start

  condition:
    - condition: state
      entity_id: input_boolean.climate_automations
      state: "on"
    - condition: state
      entity_id: input_boolean.mode_vacation
      state: "off"

  action:
    - service: climate.set_temperature
      target:
        entity_id: climate.kitchen_thermostat
      data:
        temperature: "{{ states('input_number.climate_day_temp') | int }}"

# Set Temperature to Night Temp
- alias: Climate - Set Temperature to Night Temperature
  id: "climate_set_to_night_temp"

  initial_state: true
  trigger:
    - platform: time
      at: input_datetime.climate_night_start

  condition:
    - condition: state
      entity_id: input_boolean.climate_automations
      state: "on"
    - condition: state
      entity_id: input_boolean.mode_vacation
      state: "off"

  action:
    - service: climate.set_temperature
      target:
        entity_id: climate.kitchen_thermostat
      data:
        temperature: "{{ states('input_number.climate_night_temp') | int }}"

# Away From Home Notification
- alias: Climate - Away from Home Notification
  id: climate_away_from_home_notification

  trigger:
    - platform: numeric_state
      entity_id: proximity.owen
      above: 30

  condition:
    - condition: state
      entity_id: proximity.owen
      attribute: dir_of_travel
      state: away_from
    - condition: state
      entity_id: input_boolean.climate_automations
      state: "on"

  action:
    - alias: "Set up variables for actions"
      variables:
        action_climate_away: "{{ 'CLIMATE_AWAY' ~ context.id }}"
    - alias: "Ask to set away temperature"
      service: notify.owen
      data:
        message: You appear to be away from home.
        data:
          actions:
            - action: "{{ action_climate_away }}"
              title: "Set Away Temperature"
    - alias: "Wait for a response"
      wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: "{{ action_climate_away }}"
    - alias: "Perform action"
      choose:
        - conditions: "{{ wait.trigger.event.data.action == action_climate_away }}"
          sequence:
            - service: climate.set_temperature
              target:
                entity_id: climate.kitchen_thermostat
              data:
                temperature: "{{ states('input_number.climate_away_temp') | int }}"
            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.climate_automations

# Coming Back Home
- alias: Climate - Coming Back Home
  id: climate_coming_back_home

  trigger:
    - platform: numeric_state
      entity_id: proximity.owen
      below: 30

  condition:
    - condition: state
      entity_id: proximity.owen
      attribute: dir_of_travel
      state: towards
    - condition: state
      entity_id: input_boolean.climate_automations
      state: "off"

  action:
    - service: climate.set_temperature
      target: climate.kitchen_thermostat
      data:
        temperature: "{{ states('input_number.climate_day_temp') | int }}"
    - service: input_boolean.turn_on
      target: input_boolean.climate_automations
    - alias: "Set up variables for actions"
      variables:
        action_climate_away: "{{ 'CLIMATE_AWAY' ~ context.id }}"
    - alias: "Notify climate automation back on"
      service: notify.owen
      data:
        message: Climate automation turned back on.
        data:
          actions:
            - action: "{{ action_climate_away }}"
              title: "Please don't"
    - alias: "Wait for a response"
      wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: "{{ action_climate_away }}"
    - alias: "Perform action"
      choose:
        - conditions: "{{ wait.trigger.event.data.action == action_climate_away }}"
          sequence:
            - service: climate.set_temperature
              target: climate.kitchen_thermostat
              data:
                temperature: "{{ states('input_number.climate_away_temp') | int }}"
            - service: input_boolean.turn_off
              target: input_boolean.climate_automations
