# WARNING
# This is mostly here for historic purposes. I opted to use Ratgos instead of
# custom ESP boards, because they were easier. You can use this, but note that
# this configuration is largely untested.

esphome:
  name: ${device_name}
  comment: ${device_description}
  platform: ESP32
  board: esp32dev

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: ${ip_address}
  fast_connect: true # Needed to access hidden networks

logger:

api:
  encryption:
    key: !secret esp_api_key

ota:
  password: !secret esp_ota_password

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime"
    disabled_by_default: true

  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s

switch:
  - platform: gpio
    id: ${device_id}_button
    name: ${friendly_name} Button
    disabled_by_default: true
    pin:
      number: 4
      inverted: false
    on_turn_on:
      - delay: 250ms
      - switch.turn_off: ${device_id}_button

# On = Garage Door Open
binary_sensor:
  - platform: gpio
    id: ${device_id}_state
    name: ${friendly_name} State
    disabled_by_default: true
    pin:
      number: 16
      mode: INPUT_PULLUP

cover:
  - platform: template
    id: ${device_id}
    name: ${friendly_name}
    device_class: garage
    lambda: |-
      if (id(${device_id}_state).state) {
        return COVER_OPEN;
      } else {
        return COVER_CLOSED;
      }
    open_action:
      then:
        if:
          condition:
            binary_sensor.is_off: ${device_id}_state # Door closed
          then:
            switch.turn_on: ${device_id}_button
    close_action:
      then:
        if:
          condition:
            binary_sensor.is_on: ${device_id}_state # Door open
          then:
            switch.turn_on: ${device_id}_button

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
      disabled_by_default: true

time:
  - platform: sntp
    id: ${device_id}_time
